<?php

namespace ContainerQk9OUPX;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\ContainerInterface;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getSuluTrash_TrashItemControllerService extends PERSPEQTIVE_SuluSnippetTabsBundle_Tests_Application_KernelDevDebugContainer
{
    /**
     * Gets the public 'sulu_trash.trash_item_controller' shared service.
     *
     * @return \Sulu\Bundle\TrashBundle\UserInterface\Controller\Admin\TrashItemController
     */
    public static function do($container, $lazyLoad = true)
    {
        return $container->services['sulu_trash.trash_item_controller'] = new \Sulu\Bundle\TrashBundle\UserInterface\Controller\Admin\TrashItemController(($container->services['doctrine.orm.default_entity_manager'] ?? self::getDoctrine_Orm_DefaultEntityManagerService($container)), ($container->services['sulu_core.list_builder.field_descriptor_factory'] ?? $container->load('getSuluCore_ListBuilder_FieldDescriptorFactoryService')), ($container->services['sulu_core.doctrine_list_builder_factory'] ?? $container->load('getSuluCore_DoctrineListBuilderFactoryService')), ($container->services['sulu_core.doctrine_rest_helper'] ?? $container->load('getSuluCore_DoctrineRestHelperService')), ($container->services['translator'] ?? self::getTranslatorService($container)), ($container->privates['sulu_trash.trash_manager'] ?? self::getSuluTrash_TrashManagerService($container)), ($container->privates['sulu_trash.trash_item_repository'] ?? self::getSuluTrash_TrashItemRepositoryService($container)), ($container->services['sulu_security.security_checker'] ?? self::getSuluSecurity_SecurityCheckerService($container)), ($container->privates['.service_locator.dQjDmHZ'] ?? self::get_ServiceLocator_DQjDmHZService($container)), 'Sulu\\Bundle\\TrashBundle\\Domain\\Model\\TrashItem', $container->parameters['sulu_security.permissions'], ($container->services['fos_rest.view_handler'] ?? $container->load('getFosRest_ViewHandlerService')), ($container->privates['security.token_storage'] ?? self::getSecurity_TokenStorageService($container)));
    }
}
