<?php

namespace ContainerQk9OUPX;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\ContainerInterface;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getSuluHttpCache_EventSubscriber_InvalidationService extends PERSPEQTIVE_SuluSnippetTabsBundle_Tests_Application_KernelDevDebugContainer
{
    /**
     * Gets the private 'sulu_http_cache.event_subscriber.invalidation' shared service.
     *
     * @return \Sulu\Bundle\HttpCacheBundle\EventSubscriber\InvalidationSubscriber
     */
    public static function do($container, $lazyLoad = true)
    {
        $a = ($container->services['sulu_document_manager.document_inspector'] ?? self::getSuluDocumentManager_DocumentInspectorService($container));

        if (isset($container->privates['sulu_http_cache.event_subscriber.invalidation'])) {
            return $container->privates['sulu_http_cache.event_subscriber.invalidation'];
        }
        $b = ($container->services['sulu_tag.tag_manager'] ?? self::getSuluTag_TagManagerService($container));

        if (isset($container->privates['sulu_http_cache.event_subscriber.invalidation'])) {
            return $container->privates['sulu_http_cache.event_subscriber.invalidation'];
        }

        return $container->privates['sulu_http_cache.event_subscriber.invalidation'] = new \Sulu\Bundle\HttpCacheBundle\EventSubscriber\InvalidationSubscriber(NULL, ($container->services['sulu.content.structure_manager'] ?? self::getSulu_Content_StructureManagerService($container)), $a, ($container->privates['sulu.content.resource_locator.strategy_pool'] ?? $container->load('getSulu_Content_ResourceLocator_StrategyPoolService')), ($container->services['sulu_core.webspace.webspace_manager'] ?? self::getSuluCore_Webspace_WebspaceManagerService($container)), ($container->services['request_stack'] ??= new \Symfony\Component\HttpFoundation\RequestStack()), $b, 'dev');
    }
}
