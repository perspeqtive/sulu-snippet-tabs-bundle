<?php

namespace ContainerQk9OUPX;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\ContainerInterface;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getSuluMedia_MediaStreamControllerService extends PERSPEQTIVE_SuluSnippetTabsBundle_Tests_Application_KernelDevDebugContainer
{
    /**
     * Gets the public 'sulu_media.media_stream_controller' shared service.
     *
     * @return \Sulu\Bundle\MediaBundle\Controller\MediaStreamController
     */
    public static function do($container, $lazyLoad = true)
    {
        return $container->services['sulu_media.media_stream_controller'] = new \Sulu\Bundle\MediaBundle\Controller\MediaStreamController(($container->services['sulu_media.disposition_type.resolver'] ??= new \Sulu\Bundle\MediaBundle\Media\DispositionType\DispositionTypeResolver('attachment', [], [])), ($container->services['sulu.repository.media'] ?? self::getSulu_Repository_MediaService($container)), ($container->services['sulu.content.path_cleaner'] ?? self::getSulu_Content_PathCleanerService($container)), ($container->services['sulu_media.format_manager'] ?? self::getSuluMedia_FormatManagerService($container)), ($container->services['sulu_media.format_cache'] ?? self::getSuluMedia_FormatCacheService($container)), ($container->services['sulu_media.media_manager'] ?? self::getSuluMedia_MediaManagerService($container)), ($container->services['sulu_media.storage'] ?? self::getSuluMedia_StorageService($container)), ($container->services['sulu_security.security_checker'] ?? self::getSuluSecurity_SecurityCheckerService($container)));
    }
}
