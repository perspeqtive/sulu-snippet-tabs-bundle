<?php

namespace ContainerQk9OUPX;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\ContainerInterface;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getSuluCustomUrls_ManagerService extends PERSPEQTIVE_SuluSnippetTabsBundle_Tests_Application_KernelDevDebugContainer
{
    /**
     * Gets the public 'sulu_custom_urls.manager' shared service.
     *
     * @return \Sulu\Component\CustomUrl\Manager\CustomUrlManager
     */
    public static function do($container, $lazyLoad = true)
    {
        $a = ($container->services['sulu_document_manager.document_manager'] ?? self::getSuluDocumentManager_DocumentManagerService($container));

        if (isset($container->services['sulu_custom_urls.manager'])) {
            return $container->services['sulu_custom_urls.manager'];
        }
        $b = ($container->services['sulu_document_manager.document_inspector'] ?? self::getSuluDocumentManager_DocumentInspectorService($container));

        if (isset($container->services['sulu_custom_urls.manager'])) {
            return $container->services['sulu_custom_urls.manager'];
        }
        $c = ($container->privates['sulu_custom_urls.repository'] ?? $container->load('getSuluCustomUrls_RepositoryService'));

        if (isset($container->services['sulu_custom_urls.manager'])) {
            return $container->services['sulu_custom_urls.manager'];
        }
        $d = ($container->privates['sulu_document_manager.metadata_factory'] ?? self::getSuluDocumentManager_MetadataFactoryService($container));

        if (isset($container->services['sulu_custom_urls.manager'])) {
            return $container->services['sulu_custom_urls.manager'];
        }
        $e = ($container->privates['sulu_document_manager.document_domain_event_collector'] ?? $container->load('getSuluDocumentManager_DocumentDomainEventCollectorService'));

        if (isset($container->services['sulu_custom_urls.manager'])) {
            return $container->services['sulu_custom_urls.manager'];
        }

        return $container->services['sulu_custom_urls.manager'] = new \Sulu\Component\CustomUrl\Manager\CustomUrlManager($a, $b, $c, $d, ($container->privates['sulu_document_manager.path_builder'] ?? $container->load('getSuluDocumentManager_PathBuilderService')), ($container->services['sulu_core.webspace.webspace_manager'] ?? self::getSuluCore_Webspace_WebspaceManagerService($container)), 'dev', $e);
    }
}
