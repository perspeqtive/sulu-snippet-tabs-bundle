<?php

namespace ContainerQk9OUPX;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\ContainerInterface;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getSulu_Content_MapperService extends PERSPEQTIVE_SuluSnippetTabsBundle_Tests_Application_KernelDevDebugContainer
{
    /**
     * Gets the public 'sulu.content.mapper' shared service.
     *
     * @return \Sulu\Component\Content\Mapper\ContentMapper
     */
    public static function do($container, $lazyLoad = true)
    {
        $a = ($container->services['sulu_document_manager.document_manager'] ?? self::getSuluDocumentManager_DocumentManagerService($container));

        if (isset($container->services['sulu.content.mapper'])) {
            return $container->services['sulu.content.mapper'];
        }
        $b = ($container->privates['form.factory'] ?? $container->load('getForm_FactoryService'));

        if (isset($container->services['sulu.content.mapper'])) {
            return $container->services['sulu.content.mapper'];
        }
        $c = ($container->services['sulu_document_manager.document_inspector'] ?? self::getSuluDocumentManager_DocumentInspectorService($container));

        if (isset($container->services['sulu.content.mapper'])) {
            return $container->services['sulu.content.mapper'];
        }
        $d = ($container->services['sulu_page.extension.manager'] ?? $container->load('getSuluPage_Extension_ManagerService'));

        if (isset($container->services['sulu.content.mapper'])) {
            return $container->services['sulu.content.mapper'];
        }
        $e = ($container->services['sulu.phpcr.session'] ?? self::getSulu_Phpcr_SessionService($container));

        if (isset($container->services['sulu.content.mapper'])) {
            return $container->services['sulu.content.mapper'];
        }
        $f = ($container->services['event_dispatcher'] ?? self::getEventDispatcherService($container));

        if (isset($container->services['sulu.content.mapper'])) {
            return $container->services['sulu.content.mapper'];
        }
        $g = ($container->privates['sulu_security.access_control_manager'] ?? self::getSuluSecurity_AccessControlManagerService($container));

        if (isset($container->services['sulu.content.mapper'])) {
            return $container->services['sulu.content.mapper'];
        }
        $h = ($container->privates['security.helper'] ?? self::getSecurity_HelperService($container));

        if (isset($container->services['sulu.content.mapper'])) {
            return $container->services['sulu.content.mapper'];
        }

        return $container->services['sulu.content.mapper'] = new \Sulu\Component\Content\Mapper\ContentMapper($a, ($container->services['sulu_core.webspace.webspace_manager'] ?? self::getSuluCore_Webspace_WebspaceManagerService($container)), $b, $c, ($container->services['sulu_document_manager.property_encoder'] ?? self::getSuluDocumentManager_PropertyEncoderService($container)), ($container->services['sulu.content.structure_manager'] ?? self::getSulu_Content_StructureManagerService($container)), $d, ($container->services['sulu.content.type_manager'] ?? self::getSulu_Content_TypeManagerService($container)), $e, $f, ($container->privates['sulu.content.resource_locator.strategy_pool'] ?? $container->load('getSulu_Content_ResourceLocator_StrategyPoolService')), ($container->privates['sulu_document_manager.namespace_registry'] ?? self::getSuluDocumentManager_NamespaceRegistryService($container)), $g, $container->parameters['sulu_security.permissions'], $h);
    }
}
