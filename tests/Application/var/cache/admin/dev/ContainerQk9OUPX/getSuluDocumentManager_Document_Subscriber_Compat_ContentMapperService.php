<?php

namespace ContainerQk9OUPX;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\ContainerInterface;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getSuluDocumentManager_Document_Subscriber_Compat_ContentMapperService extends PERSPEQTIVE_SuluSnippetTabsBundle_Tests_Application_KernelDevDebugContainer
{
    /**
     * Gets the private 'sulu_document_manager.document.subscriber.compat.content_mapper' shared service.
     *
     * @return \Sulu\Component\Content\Document\Subscriber\Compat\ContentMapperSubscriber
     */
    public static function do($container, $lazyLoad = true)
    {
        $a = ($container->services['sulu_document_manager.document_inspector'] ?? self::getSuluDocumentManager_DocumentInspectorService($container));

        if (isset($container->privates['sulu_document_manager.document.subscriber.compat.content_mapper'])) {
            return $container->privates['sulu_document_manager.document.subscriber.compat.content_mapper'];
        }
        $b = ($container->services['event_dispatcher'] ?? self::getEventDispatcherService($container));

        if (isset($container->privates['sulu_document_manager.document.subscriber.compat.content_mapper'])) {
            return $container->privates['sulu_document_manager.document.subscriber.compat.content_mapper'];
        }
        $c = ($container->services['sulu.content.mapper'] ?? $container->load('getSulu_Content_MapperService'));

        if (isset($container->privates['sulu_document_manager.document.subscriber.compat.content_mapper'])) {
            return $container->privates['sulu_document_manager.document.subscriber.compat.content_mapper'];
        }

        return $container->privates['sulu_document_manager.document.subscriber.compat.content_mapper'] = new \Sulu\Component\Content\Document\Subscriber\Compat\ContentMapperSubscriber($a, $b, $c, ($container->services['sulu.util.node_helper'] ?? self::getSulu_Util_NodeHelperService($container)), ($container->services['sulu.content.structure_manager'] ?? self::getSulu_Content_StructureManagerService($container)));
    }
}
