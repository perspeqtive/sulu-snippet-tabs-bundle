<?php

namespace ContainerQk9OUPX;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\ContainerInterface;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getSuluCustomUrls_CustomUrlTrashItemHandlerService extends PERSPEQTIVE_SuluSnippetTabsBundle_Tests_Application_KernelDevDebugContainer
{
    /**
     * Gets the private 'sulu_custom_urls.custom_url_trash_item_handler' shared service.
     *
     * @return \Sulu\Bundle\CustomUrlBundle\Trash\CustomUrlTrashItemHandler
     */
    public static function do($container, $lazyLoad = true)
    {
        $a = ($container->services['sulu_document_manager.document_manager'] ?? self::getSuluDocumentManager_DocumentManagerService($container));

        if (isset($container->privates['sulu_custom_urls.custom_url_trash_item_handler'])) {
            return $container->privates['sulu_custom_urls.custom_url_trash_item_handler'];
        }
        $b = ($container->services['sulu_document_manager.document_inspector'] ?? self::getSuluDocumentManager_DocumentInspectorService($container));

        if (isset($container->privates['sulu_custom_urls.custom_url_trash_item_handler'])) {
            return $container->privates['sulu_custom_urls.custom_url_trash_item_handler'];
        }
        $c = ($container->privates['sulu_document_manager.document_domain_event_collector'] ?? $container->load('getSuluDocumentManager_DocumentDomainEventCollectorService'));

        if (isset($container->privates['sulu_custom_urls.custom_url_trash_item_handler'])) {
            return $container->privates['sulu_custom_urls.custom_url_trash_item_handler'];
        }

        return $container->privates['sulu_custom_urls.custom_url_trash_item_handler'] = new \Sulu\Bundle\CustomUrlBundle\Trash\CustomUrlTrashItemHandler(($container->privates['sulu_trash.trash_item_repository'] ?? self::getSuluTrash_TrashItemRepositoryService($container)), $a, $b, $c);
    }
}
