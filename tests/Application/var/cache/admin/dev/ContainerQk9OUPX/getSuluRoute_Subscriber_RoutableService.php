<?php

namespace ContainerQk9OUPX;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\ContainerInterface;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getSuluRoute_Subscriber_RoutableService extends PERSPEQTIVE_SuluSnippetTabsBundle_Tests_Application_KernelDevDebugContainer
{
    /**
     * Gets the private 'sulu_route.subscriber.routable' shared service.
     *
     * @return \Sulu\Bundle\RouteBundle\Document\Subscriber\RoutableSubscriber
     */
    public static function do($container, $lazyLoad = true)
    {
        $a = ($container->services['doctrine.orm.default_entity_manager'] ?? self::getDoctrine_Orm_DefaultEntityManagerService($container));

        if (isset($container->privates['sulu_route.subscriber.routable'])) {
            return $container->privates['sulu_route.subscriber.routable'];
        }
        $b = ($container->services['sulu_document_manager.document_manager'] ?? self::getSuluDocumentManager_DocumentManagerService($container));

        if (isset($container->privates['sulu_route.subscriber.routable'])) {
            return $container->privates['sulu_route.subscriber.routable'];
        }
        $c = ($container->services['sulu_document_manager.document_inspector'] ?? self::getSuluDocumentManager_DocumentInspectorService($container));

        if (isset($container->privates['sulu_route.subscriber.routable'])) {
            return $container->privates['sulu_route.subscriber.routable'];
        }

        return $container->privates['sulu_route.subscriber.routable'] = new \Sulu\Bundle\RouteBundle\Document\Subscriber\RoutableSubscriber(($container->privates['sulu_route.chain_generator'] ?? $container->load('getSuluRoute_ChainGeneratorService')), ($container->privates['sulu_route.manager.route_manager'] ?? $container->load('getSuluRoute_Manager_RouteManagerService')), ($container->services['sulu.repository.route'] ?? $container->load('getSulu_Repository_RouteService')), $a, $b, $c, ($container->services['sulu_document_manager.property_encoder'] ?? self::getSuluDocumentManager_PropertyEncoderService($container)), ($container->services['sulu_page.structure.factory'] ?? self::getSuluPage_Structure_FactoryService($container)), ($container->privates['sulu_route.manager.conflict_resolver.auto_increment'] ?? $container->load('getSuluRoute_Manager_ConflictResolver_AutoIncrementService')));
    }
}
