<?php

namespace ContainerQk9OUPX;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\ContainerInterface;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getConsole_Command_CachePoolPruneService extends PERSPEQTIVE_SuluSnippetTabsBundle_Tests_Application_KernelDevDebugContainer
{
    /**
     * Gets the private 'console.command.cache_pool_prune' shared service.
     *
     * @return \Symfony\Bundle\FrameworkBundle\Command\CachePoolPruneCommand
     */
    public static function do($container, $lazyLoad = true)
    {
        $container->privates['console.command.cache_pool_prune'] = $instance = new \Symfony\Bundle\FrameworkBundle\Command\CachePoolPruneCommand(new RewindableGenerator(function () use ($container) {
            yield 'cache.app' => ($container->services['cache.app'] ?? $container->load('getCache_AppService'));
            yield 'sulu_preview.preview.cache' => ($container->privates['sulu_preview.preview.cache'] ?? $container->load('getSuluPreview_Preview_CacheService'));
            yield 'sulu_admin.collaboration_cache' => ($container->privates['sulu_admin.collaboration_cache'] ?? $container->load('getSuluAdmin_CollaborationCacheService'));
            yield 'sulu_admin.icon_cache' => ($container->privates['sulu_admin.icon_cache'] ?? $container->load('getSuluAdmin_IconCacheService'));
        }, 4));

        $instance->setName('cache:pool:prune');
        $instance->setDescription('Prune cache pools');

        return $instance;
    }
}
